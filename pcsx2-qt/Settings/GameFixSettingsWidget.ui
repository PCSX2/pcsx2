<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>GameFixSettingsWidget</class>
 <widget class="QWidget" name="GameFixSettingsWidget">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>700</width>
    <height>700</height>
   </rect>
  </property>
  <layout class="QVBoxLayout" name="verticalLayout_3">
   <item>
    <widget class="QGroupBox" name="groupBox">
     <property name="title">
      <string>Game Fixes</string>
     </property>
     <layout class="QVBoxLayout" name="verticalLayout_2">
      <item>
       <widget class="QCheckBox" name="FpuMulHack">
        <property name="text">
         <string extracomment="FPU = Floating Point Unit. A part of the PS2's CPU. Do not translate.\nMultiply: mathematical term.\nTales of Destiny: a game's name. Leave as-is or use an official translation.">FPU Multiply Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="SoftwareRendererFMVHack">
        <property name="text">
         <string extracomment="FMV: Full Motion Video. Find the common used term in your language.">Use Software Renderer For FMVs</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="SkipMPEGHack">
        <property name="text">
         <string extracomment="MPEG: video codec, leave as-is. FMV: Full Motion Video. Find the common used term in your language.">Skip MPEG Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="GoemonTlbHack">
        <property name="text">
         <string extracomment="TLB: Translation Lookaside Buffer. Leave as-is. Goemon: name of a character from the series with his name. Leave as-is or use an official translation.">Preload TLB Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="EETimingHack">
        <property name="text">
         <string extracomment="EE: Emotion Engine. Leave as-is.">EE Timing Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="InstantDMAHack">
        <property name="text">
         <string extracomment="DMA: Direct Memory Access. Leave as-is.">Instant DMA Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="OPHFlagHack">
        <property name="text">
         <string extracomment="OPH: Name of a flag (Output PatH) in the GIF_STAT register in the EE. Leave as-is.\nBleach Blade Battles: a game's name. Leave as-is or use an official translation.">OPH Flag Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="GIFFIFOHack">
        <property name="text">
         <string extracomment="GIF = GS (Graphics Synthesizer, the GPU) Interface. Leave as-is.\nFIFO = First-In-First-Out, a type of buffer. Leave as-is.">Emulate GIF FIFO</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="DMABusyHack">
        <property name="text">
         <string extracomment="DMA: Direct Memory Access. Leave as-is.">DMA Busy Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="VIF1StallHack">
        <property name="text">
         <string extracomment="VIF = VU (Vector Unit) Interface. Leave as-is. SOCOM 2 and Spy Hunter: names of two different games. Leave as-is or use an official translation.\nHUD = Heads-Up Display. The games' interfaces.">Delay VIF1 Stalls</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="VIFFIFOHack">
        <property name="text">
         <string extracomment="VIF = VU (Vector Unit) Interface. Leave as-is.\nFIFO = First-In-First-Out, a type of buffer. Leave as-is.">Emulate VIF FIFO</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="FullVU0SyncHack">
        <property name="text">
         <string extracomment="VU0 = VU (Vector Unit) 0. Leave as-is.">Full VU0 Synchronization</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="IbitHack">
        <property name="text">
         <string extracomment="VU = Vector Unit. Leave as-is.\nI Bit = A bit referred as I, not as 1.\nScarface The World is Yours and Crash Tag Team Racing: names of two different games. Leave as-is or use an official translation.">VU I Bit Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="VuAddSubHack">
        <property name="text">
         <string extracomment="VU = Vector Unit. Leave as-is.\nTri-Ace: a game development company name. Leave as-is.">VU Add Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="VUOverflowHack">
        <property name="text">
         <string extracomment="VU = Vector Unit. Leave as-is.\nSuperman Returns: a game's name. Leave as-is or use an official translation.">VU Overflow Hack</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="VUSyncHack">
        <property name="text">
         <string extracomment="VU = Vector Unit. Leave as-is.\nRun Behind: watch out for misleading capitalization for non-English: this refers to making the VUs run behind (delayed relative to) the EE.\nM-Bit: a bitflag in VU instructions that tells VU0 to synchronize with the EE. M-Bit Game: A game that uses instructions with the M-Bit enabled (unofficial PCSX2 name).">VU Sync</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="XgKickHack">
        <property name="text">
         <string extracomment="VU = Vector Unit. Leave as-is.\nXGKick: the name of one of the VU's instructions. Leave as-is.">VU XGKick Sync</string>
        </property>
       </widget>
      </item>
      <item>
       <widget class="QCheckBox" name="BlitInternalFPSHack">
        <property name="text">
         <string extracomment="Blit = a data operation. You might want to write it as-is, but fully uppercased. More information: https://en.wikipedia.org/wiki/Bit_blit  This option tells PCSX2 to estimate internal FPS by detecting blits (image copies) onto visible display memory.">Force Blit Internal FPS Detection</string>
        </property>
       </widget>
      </item>
     </layout>
    </widget>
   </item>
   <item>
    <spacer name="verticalSpacer">
     <property name="orientation">
      <enum>Qt::Orientation::Vertical</enum>
     </property>
     <property name="sizeHint" stdset="0">
      <size>
       <width>20</width>
       <height>0</height>
      </size>
     </property>
    </spacer>
   </item>
  </layout>
 </widget>
 <tabstops>
  <tabstop>FpuMulHack</tabstop>
  <tabstop>SoftwareRendererFMVHack</tabstop>
  <tabstop>SkipMPEGHack</tabstop>
  <tabstop>GoemonTlbHack</tabstop>
  <tabstop>EETimingHack</tabstop>
  <tabstop>InstantDMAHack</tabstop>
  <tabstop>OPHFlagHack</tabstop>
  <tabstop>GIFFIFOHack</tabstop>
  <tabstop>DMABusyHack</tabstop>
  <tabstop>VIF1StallHack</tabstop>
  <tabstop>VIFFIFOHack</tabstop>
  <tabstop>FullVU0SyncHack</tabstop>
  <tabstop>IbitHack</tabstop>
  <tabstop>VuAddSubHack</tabstop>
  <tabstop>VUOverflowHack</tabstop>
  <tabstop>VUSyncHack</tabstop>
  <tabstop>XgKickHack</tabstop>
  <tabstop>BlitInternalFPSHack</tabstop>
 </tabstops>
 <resources>
  <include location="../resources/resources.qrc"/>
 </resources>
 <connections/>
</ui>
